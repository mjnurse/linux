#!/bin/bash
help_text="
NAME
  script-template - A script containing an example script-template.

USAGE
  script-template [options] <parameters>

OPTIONS
  -x
    Description...

  -h|--help
    Show help text.

DESCRIPTION
  Description description description description.

AUTHOR
  mjnurse.dev - 2020
"
help_line="A script containing an example script-template"
web_desc_line="A script containing an example script-template"

try="Try ${0##*/} -h for more information"
tmp="${help_text##*USAGE}"
usage="$(echo Usage: ${tmp%%OPTIONS*})"

logging_yn=n
max_value=-1
tmp="/tmp/img.tmp"

while [[ "$1" != "" ]]; do
  case $1 in 
    -h|--help)
      echo "$help_text"
      exit
      ;;
    -l|--logging)
      logging_yn=y
      ;;
    -m|--max)
      shift
      max_value=$1
      ;;
    ?*)
      break
      ;;
  esac 
  shift
done 

echo "IMAGE SOURCE:"
echo "- c: current dir"
echo "- o: other - enter full path/filename"
echo "- s: screen shots"
echo
read -p "[coS]: " cos

source_dir=""
img_filename=""
case $cos in
  c)
    source_dir="$(pwd)"
    ;;
  o)
    read -p "path/filename: " img_filename
    ;;
  s)
    source_dir="/c/MJN/screenshots"
    ;;
  *)
    echo "Error: Invalid option"
    exit 1
esac

if [[ "$source_dir" != "" ]]; then
  cd $source_dir
  ls | sort > $tmp
  num=1
  while read line; do
    echo $num: $line
    let num=num+1
  done < $tmp
  read -p "Enter Number (blank to quit): " selection
  if [[ "$selection" == "" ]]; then
    exit
  fi
  num=1
  while read line; do
    if [[ $num == $selection ]]; then
      img_filename="${line}"
    fi
    let num=num+1
  done < $tmp
fi

echo $source_dir/$img_filename 
if [[ ! -f $source_dir/$img_filename ]]; then
  echo "File: $img_filename - not found"
  exit
fi

echo
echo "IMAGE DESTINATION"
cd /c/MJN/github/mjnurse-github-io

find . -name images -print | sort > $tmp
num=1
while read line; do
  echo $num: $line
  let num=num+1
done < $tmp
read -p "Enter Number (blank to quit): " selection
if [[ "$selection" == "" ]]; then
  exit
fi
num=1

dest_dir=""
while read line; do
  if [[ $num == $selection ]]; then
    dest_dir="$line"
  fi
  let num=num+1
done < $tmp

if [[ "$dest_dir" == "" ]]; then
  echo "No such directory: $dest_dir"
  exit
fi

echo
read -p "Enter Destination image name (blank to use existing name): " new_name

if [[ "$new_name" == "" ]]; then
  new_name="${img_filename##*/}"
  new_name="${new_name// /-}"
  new_name="${new_name,,}"
fi

if [[ "${new_name##*.}" != "png" &&  \
      "${new_name##*.}" != "jpg" ]]; then
  echo "$new_name - is not a valid image filename"
  exit
fi

echo
echo "Copying: $source_dir/$img_filename"
echo "To: $dest_dir/$new_name"
echo
read -p "Continue [yN]? " yn

if [[ ${yn,,} == y ]]; then
  cp "$source_dir/$img_filename" $dest_dir/$new_name
  echo
  echo "Image md tag: ![](${dest_dir:1}/$new_name)"
fi
